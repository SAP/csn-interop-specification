"use strict";(self.webpackChunk_sap_csn_interop_specification=self.webpackChunk_sap_csn_interop_specification||[]).push([[1093],{4795:(e,t,n)=>{n.d(t,{A:()=>j});n(6540);var r=n(4164),s=n(4718),a=n(8774),i=n(5846),o=n(6654),c=n(1312),l=n(1107);const p={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=n(4848);function d(e){var t=e.className,n=e.href,s=e.children;return(0,u.jsx)(a.A,{href:n,className:(0,r.A)("card padding--lg",p.cardContainer,t),children:s})}function m(e){var t=e.className,n=e.href,s=e.icon,a=e.title,i=e.description;return(0,u.jsxs)(d,{href:n,className:t,children:[(0,u.jsxs)(l.A,{as:"h2",className:(0,r.A)("text--truncate",p.cardTitle),title:a,children:[s," ",a]}),i&&(0,u.jsx)("p",{className:(0,r.A)("text--truncate",p.cardDescription),title:i,children:i})]})}function f(e){var t,n,r=e.item,a=(0,s.Nr)(r),o=(n=(0,i.W)().selectMessage,function(e){return n(e,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e}))});return a?(0,u.jsx)(m,{className:r.className,href:a,icon:"\ud83d\uddc3\ufe0f",title:r.label,description:null!=(t=r.description)?t:o(r.items.length)}):null}function h(e){var t,n,r=e.item,a=(0,o.A)(r.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,s.cC)(null!=(t=r.docId)?t:void 0);return(0,u.jsx)(m,{className:r.className,href:r.href,icon:a,title:r.label,description:null!=(n=r.description)?n:null==i?void 0:i.description})}function g(e){var t=e.item;switch(t.type){case"link":return(0,u.jsx)(h,{item:t});case"category":return(0,u.jsx)(f,{item:t});default:throw new Error("unknown item type "+JSON.stringify(t))}}const x={docCardListItem:"docCardListItem_W1sv"};function v(e){var t=e.className,n=(0,s.a4)();return(0,u.jsx)(j,{items:n,className:t})}function y(e){var t=e.item;return(0,u.jsx)("article",{className:(0,r.A)(x.docCardListItem,"col col--6"),children:(0,u.jsx)(g,{item:t})})}function j(e){var t=e.items,n=e.className;if(!t)return(0,u.jsx)(v,Object.assign({},e));var a=(0,s.d1)(t);return(0,u.jsx)("section",{className:(0,r.A)("row",n),children:a.map((function(e,t){return(0,u.jsx)(y,{item:e},t)}))})}},5238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"mappings/index","title":"Mappings","description":"This section describes the mappings to and from the (conceptual) CSN Type system to other data formats / type systems.","source":"@site/docs/mappings/index.mdx","sourceDirName":"mappings","slug":"/mappings/","permalink":"/csn-interop-specification/mappings/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Mappings","sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Consumption","permalink":"/csn-interop-specification/spec-v1/consumption"},"next":{"title":"Apache Spark","permalink":"/csn-interop-specification/mappings/apache-spark"}}');var s=n(4848),a=n(8453),i=n(4795);const o={title:"Mappings",sidebar_position:5},c="Data Format Mappings",l={},p=[];function u(e){const t={h1:"h1",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"data-format-mappings",children:"Data Format Mappings"})}),"\n",(0,s.jsx)(t.p,{children:"This section describes the mappings to and from the (conceptual) CSN Type system to other data formats / type systems."}),"\n",(0,s.jsx)(t.p,{children:"It is important to understand that the CSN type system itself is on an abstract level only.\nWhich concrete data type is used when serializing and parsing the actual values is therefore not defined by CSN itself.\nIt depends on the target API Protocol and the chosen mapping to a data format / type system."}),"\n","\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(i.A,{})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},5846:(e,t,n)=>{n.d(t,{W:()=>l});var r=n(6540),s=n(4586),a=["zero","one","two","few","many","other"];function i(e){return a.filter((function(t){return e.includes(t)}))}var o={locale:"en",pluralForms:i(["one","other"]),select:function(e){return 1===e?"one":"other"}};function c(){var e=(0,s.A)().i18n.currentLocale;return(0,r.useMemo)((function(){try{return t=e,n=new Intl.PluralRules(t),{locale:t,pluralForms:i(n.resolvedOptions().pluralCategories),select:function(e){return n.select(e)}}}catch(r){return console.error('Failed to use Intl.PluralRules for locale "'+e+'".\nDocusaurus will fallback to the default (English) implementation.\nError: '+r.message+"\n"),o}var t,n}),[e])}function l(){var e=c();return{selectMessage:function(t,n){return function(e,t,n){var r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error("For locale="+n.locale+", a maximum of "+n.pluralForms.length+" plural forms are expected ("+n.pluralForms.join(",")+"), but the message contains "+r.length+": "+e);var s=n.select(t),a=n.pluralForms.indexOf(s);return r[Math.min(a,r.length-1)]}(n,t,e)}}}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6540);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);