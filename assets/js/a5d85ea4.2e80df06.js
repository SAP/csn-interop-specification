"use strict";(self.webpackChunk_sap_csn_interop_specification=self.webpackChunk_sap_csn_interop_specification||[]).push([[2516],{1842:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"spec-v1/examples/airline","title":"Airline","description":"Description","source":"@site/docs/spec-v1/examples/airline.md","sourceDirName":"spec-v1/examples","slug":"/spec-v1/examples/airline","permalink":"/csn-interop-specification/spec-v1/examples/airline","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Airline","sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Annotations","permalink":"/csn-interop-specification/spec-v1/examples/"},"next":{"title":"Entities with Annotations","permalink":"/csn-interop-specification/spec-v1/examples/entities_with_annotations"}}');var r=t(4848),o=t(8453);const s={title:"Airline",sidebar_position:1},l=void 0,a={},c=[{value:"Description",id:"description",level:2},{value:"Example File",id:"example-file",level:2}];function d(n){const e={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(e.p,{children:"The airline example is our primary example file:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"It shows how with CSN its possible to describe the Entity-Relationship model, including associations."}),"\n",(0,r.jsx)(e.li,{children:"It also showcases how the CDS Service concept work and how CDS entities are assigned to it via name prefixing."}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["The example is a subset of the ",(0,r.jsx)(e.a,{href:"https://github.com/SAP-samples/cap-sflight",children:"CAP SFlight"})," example data model, stripped down and slightly adapted to the scope specified so far, and to the entities: ",(0,r.jsx)(e.em,{children:"Airline"}),", ",(0,r.jsx)(e.em,{children:"Airport"}),", ",(0,r.jsx)(e.em,{children:"Countries"}),", ",(0,r.jsx)(e.em,{children:"Countries_texts"}),", ",(0,r.jsx)(e.em,{children:"FlightConnection"})," and ",(0,r.jsx)(e.em,{children:"Flight"}),"."]}),"\n",(0,r.jsx)(e.p,{children:"We start with a simple model representing six plain tables. Then add only annotations, then only foreign key and text associations. Finally we combine both to a complete ER Model incl. some more annotations towards analytical modeling and assignment to a CDS Service."}),"\n",(0,r.jsx)(e.h2,{id:"example-file",children:"Example File"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:'{\n  "$schema": "https://sap.github.io/csn-interop-specification/spec-v1/csn-interop-effective.schema.json",\n  "csnInteropEffective": "1.0",\n  "$version": "2.0",\n  "meta": {\n    "document": {\n      "version": "1.2.3",\n      "title": "Airline (Example)",\n      "name": "Airline",\n      "namespace": "sap.xref",\n      "doc": "This CSN example document shows how the airline example is expressed with a CDS **Service** exposing the entities through an API."\n    },\n    "features": {\n      "complete": true\n    }\n  },\n  "definitions": {\n    "AirlineService": {\n      "kind": "service",\n      "doc": "This is describing the service that exposes the CDS entities through an API."\n    },\n    "AirlineService.Airline": {\n      "kind": "entity",\n      "doc": "Human readable description of the entity, in **markdown**.",\n      "@EndUserText.label": "Airline",\n      "@ObjectModel.modelingPattern": {\n        "#": "ANALYTICAL_DIMENSION"\n      },\n      "elements": {\n        "AirlineID": {\n          "@EndUserText.label": "Airline",\n          "@ObjectModel.text.element": ["Name"],\n          "doc": "Human readable description of the element, in **markdown**.",\n          "key": true,\n          "notNull": true,\n          "type": "AirlineUuid",\n          "length": 3\n        },\n        "Name": {\n          "@EndUserText.label": "Name",\n          "@Semantics.text": true,\n          "type": "cds.String",\n          "length": 40,\n          "notNull": true\n        },\n        "CurrencyCode_code": {\n          "@EndUserText.label": "Currency Code",\n          "@Semantics.currencyCode": true,\n          "type": "cds.String",\n          "length": 3\n        }\n      }\n    },\n    "AirlineUuid": {\n      "kind": "type",\n      "doc": "Description of the reuse type",\n      "@EndUserText.label": "Airline",\n      "@ObjectModel.text.element": ["Name"],\n      "type": "cds.String",\n      "length": 3\n    },\n    "AirlineService.Airport": {\n      "kind": "entity",\n      "@EndUserText.label": "Airport",\n      "@ObjectModel.modelingPattern": {\n        "#": "ANALYTICAL_DIMENSION"\n      },\n      "elements": {\n        "AirportID": {\n          "@EndUserText.label": "Airport",\n          "@ObjectModel.text.element": ["Name"],\n          "key": true,\n          "notNull": true,\n          "type": "cds.String",\n          "length": 3\n        },\n        "Name": {\n          "@EndUserText.label": "Name",\n          "@Semantics.text": true,\n          "notNull": true,\n          "type": "cds.String",\n          "length": 40\n        },\n        "City": {\n          "@EndUserText.label": "City",\n          "type": "cds.String",\n          "notNull": true,\n          "length": 40\n        },\n        "CountryCode_code": {\n          "@EndUserText.label": "Country Code",\n          "type": "cds.String",\n          "length": 3,\n          "@ObjectModel.foreignKey.association": {\n            "=": "to_CountryCode"\n          }\n        },\n        "to_CountryCode": {\n          "type": "cds.Association",\n          "target": "AirlineService.Countries",\n          "cardinality": {\n            "max": 1\n          },\n          "on": [\n            {\n              "ref": ["to_CountryCode", "code"]\n            },\n            "=",\n            {\n              "ref": ["CountryCode_code"]\n            }\n          ]\n        }\n      }\n    },\n    "AirlineService.Countries": {\n      "kind": "entity",\n      "@EndUserText.label": "Countries",\n      "@ObjectModel.modelingPattern": {\n        "#": "ANALYTICAL_DIMENSION"\n      },\n      "elements": {\n        "code": {\n          "@EndUserText.label": "Country Code",\n          "@ObjectModel.text.association": {\n            "=": "texts"\n          },\n          "key": true,\n          "notNull": true,\n          "type": "cds.String",\n          "length": 3\n        },\n        "texts": {\n          "type": "cds.Composition",\n          "cardinality": {\n            "max": "*"\n          },\n          "target": "AirlineService.Countries_texts",\n          "on": [\n            {\n              "ref": ["texts", "code"]\n            },\n            "=",\n            {\n              "ref": ["code"]\n            }\n          ]\n        }\n      }\n    },\n    "AirlineService.Countries_texts": {\n      "kind": "entity",\n      "@EndUserText.label": "Countries Texts",\n      "@ObjectModel.modelingPattern": {\n        "#": "LANGUAGE_DEPENDENT_TEXT"\n      },\n      "elements": {\n        "code": {\n          "@EndUserText.label": "Country Code",\n          "key": true,\n          "type": "cds.String",\n          "length": 3\n        },\n        "locale": {\n          "@EndUserText.label": "Language Code",\n          "@Semantics.language": true,\n          "key": true,\n          "type": "cds.String",\n          "length": 14\n        },\n        "name": {\n          "@EndUserText.label": "Name",\n          "@Semantics.text": true,\n          "type": "cds.String",\n          "length": 255\n        },\n        "descr": {\n          "@EndUserText.label": "Description",\n          "@Semantics.text": true,\n          "type": "cds.String",\n          "length": 1000\n        }\n      }\n    },\n    "AirlineService.FlightConnection": {\n      "kind": "entity",\n      "@EndUserText.label": "Flight Connection",\n      "@ObjectModel.representativeKey": {\n        "=": "ConnectionID"\n      },\n      "@ObjectModel.modelingPattern": {\n        "#": "ANALYTICAL_DIMENSION"\n      },\n      "elements": {\n        "AirlineID": {\n          "@EndUserText.label": "Airline",\n          "key": true,\n          "type": "cds.String",\n          "length": 3,\n          "@ObjectModel.foreignKey.association": {\n            "=": "to_Airline"\n          }\n        },\n        "ConnectionID": {\n          "@EndUserText.label": "Flight Number",\n          "key": true,\n          "type": "cds.String",\n          "length": 4\n        },\n        "DepartureAirport_AirportID": {\n          "@EndUserText.label": "Departure Airport",\n          "type": "cds.String",\n          "length": 3,\n          "@ObjectModel.foreignKey.association": {\n            "=": "to_DepartureAirport"\n          }\n        },\n        "DestinationAirport_AirportID": {\n          "@EndUserText.label": "Destination Airport",\n          "type": "cds.String",\n          "length": 3,\n          "@ObjectModel.foreignKey.association": {\n            "=": "to_DestinationAirport"\n          }\n        },\n        "DepartureTime": {\n          "@EndUserText.label": "Departure Time",\n          "type": "cds.Time"\n        },\n        "ArrivalTime": {\n          "@EndUserText.label": "Arrival Time",\n          "type": "cds.Time"\n        },\n        "Distance": {\n          "@EndUserText.label": "Distance",\n          "@Semantics.quantity.unitOfMeasure": {\n            "=": "DistanceUnit"\n          },\n          "type": "cds.Integer"\n        },\n        "DistanceUnit": {\n          "@EndUserText.label": "Distance Unit",\n          "type": "cds.String",\n          "length": 3\n        },\n        "to_Airline": {\n          "type": "cds.Association",\n          "target": "AirlineService.Airline",\n          "cardinality": {\n            "min": 0,\n            "max": "*"\n          },\n          "on": [\n            {\n              "ref": ["to_Airline", "AirlineID"]\n            },\n            "=",\n            {\n              "ref": ["AirlineID"]\n            }\n          ]\n        },\n        "to_DepartureAirport": {\n          "type": "cds.Association",\n          "target": "AirlineService.Airport",\n          "cardinality": {\n            "max": "*"\n          },\n          "on": [\n            {\n              "ref": ["to_DepartureAirport", "AirportID"]\n            },\n            "=",\n            {\n              "ref": ["DepartureAirport_AirportID"]\n            }\n          ]\n        },\n        "to_DestinationAirport": {\n          "type": "cds.Association",\n          "target": "AirlineService.Airport",\n          "cardinality": {\n            "max": "*"\n          },\n          "on": [\n            {\n              "ref": ["to_DestinationAirport", "AirportID"]\n            },\n            "=",\n            {\n              "ref": ["DestinationAirport_AirportID"]\n            }\n          ]\n        }\n      }\n    },\n    "AirlineService.Flight": {\n      "kind": "entity",\n      "@EndUserText.label": "Flight",\n      "@ObjectModel.modelingPattern": {\n        "#": "ANALYTICAL_FACT"\n      },\n      "@ObjectModel.supportedCapabilities": [\n        {\n          "#": "DATA_STRUCTURE"\n        }\n      ],\n      "elements": {\n        "AirlineID": {\n          "@EndUserText.label": "Airline",\n          "key": true,\n          "type": "cds.String",\n          "length": 3,\n          "@ObjectModel.foreignKey.association": {\n            "=": "to_Airline"\n          }\n        },\n        "FlightDate": {\n          "@EndUserText.label": "Flight Date",\n          "key": true,\n          "type": "cds.Date"\n        },\n        "ConnectionID": {\n          "@EndUserText.label": "Flight Number",\n          "key": true,\n          "type": "cds.String",\n          "length": 4,\n          "@ObjectModel.foreignKey.association": {\n            "=": "to_Connection"\n          }\n        },\n        "Price": {\n          "@EndUserText.label": "Price",\n          "@Aggregation.default": {\n            "#": "MIN"\n          },\n          "@Semantics.amount.currencyCode": {\n            "=": "CurrencyCode_code"\n          },\n          "type": "cds.Decimal",\n          "precision": 16,\n          "scale": 3\n        },\n        "CurrencyCode_code": {\n          "@EndUserText.label": "Currency Code",\n          "@Semantics.currencyCode": true,\n          "type": "cds.String",\n          "length": 3\n        },\n        "PlaneType": {\n          "@EndUserText.label": "Plane Type",\n          "type": "cds.String",\n          "length": 10\n        },\n        "MaximumSeats": {\n          "@EndUserText.label": "Maximum Seats",\n          "@Aggregation.default": {\n            "#": "SUM"\n          },\n          "type": "cds.Integer"\n        },\n        "OccupiedSeats": {\n          "@EndUserText.label": "Occupied Seats",\n          "@Aggregation.default": {\n            "#": "SUM"\n          },\n          "type": "cds.Integer"\n        },\n        "to_Airline": {\n          "type": "cds.Association",\n          "target": "AirlineService.Airline",\n          "cardinality": {\n            "max": "*"\n          },\n          "on": [\n            {\n              "ref": ["to_Airline", "AirlineID"]\n            },\n            "=",\n            {\n              "ref": ["AirlineID"]\n            }\n          ]\n        },\n        "to_Connection": {\n          "type": "cds.Association",\n          "target": "AirlineService.FlightConnection",\n          "cardinality": {\n            "max": "*"\n          },\n          "on": [\n            {\n              "ref": ["to_Connection", "AirlineID"]\n            },\n            "=",\n            {\n              "ref": ["AirlineID"]\n            },\n            "and",\n            {\n              "ref": ["to_Connection", "ConnectionID"]\n            },\n            "=",\n            {\n              "ref": ["ConnectionID"]\n            }\n          ]\n        }\n      }\n    },\n    "UnassignedEntity": {\n      "kind": "entity",\n      "doc": "This entity is not prefixed with the service name and therefore not accessible through the service.",\n      "elements": {\n        "SomeElement": {\n          "key": true,\n          "type": "cds.String"\n        }\n      }\n    }\n  }\n}\n\n'})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);